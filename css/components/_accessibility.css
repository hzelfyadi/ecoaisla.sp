/* ==========================================================================
   #ACCESSIBILITY
   ========================================================================== */

/**
 * Skip links
 * Visually hidden by default, shown on focus
 */
.skip-links {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  z-index: 1000;
  text-align: center;
}

.skip-link {
  position: absolute;
  top: -100px;
  left: 0;
  z-index: 1001;
  display: inline-block;
  padding: 12px 20px;
  color: #ffffff;
  background-color: #333;
  text-decoration: none;
  font-weight: 600;
  border-radius: 0 0 4px 4px;
  transition: transform 0.2s ease-in-out;
  transform: translateY(-100%);
}

.skip-link:focus {
  transform: translateY(0);
  outline: 3px solid #4a90e2;
  outline-offset: 2px;
}

/**
 * Focus styles
 * Only show focus styles when using keyboard navigation
 */
*:focus {
  outline: none;
}

body:not(.using-mouse) *:focus {
  outline: 3px solid #4a90e2;
  outline-offset: 2px;
  box-shadow: 0 0 0 2px #ffffff, 0 0 0 4px #4a90e2;
}

/* Remove focus styles for mouse users */
body.using-mouse *:focus {
  outline: none;
}

/* Focus styles for specific elements */
a:focus,
button:focus,
input:focus,
select:focus,
textarea:focus,
[tabindex]:focus {
  position: relative;
  z-index: 1;
}

/* Focus styles for buttons */
button:focus {
  outline-offset: 2px;
}

/* Focus styles for form elements */
input:not([type="checkbox"]):not([type="radio"]):focus,
select:focus,
textarea:focus {
  border-color: #4a90e2;
  box-shadow: 0 0 0 2px rgba(74, 144, 226, 0.3);
}

/* Focus styles for checkboxes and radio buttons */
input[type="checkbox"]:focus,
input[type="radio"]:focus {
  box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.3);
}

/**
 * ARIA states and properties
 */
[aria-hidden="true"] {
  display: none !important;
}

[aria-busy="true"] {
  cursor: progress;
}

[aria-disabled="true"],
:disabled {
  cursor: not-allowed;
  opacity: 0.7;
}

[aria-current] {
  font-weight: bold;
  text-decoration: underline;
}

/**
 * Error states
 */
[aria-invalid="true"],
.error,
.has-error {
  border-color: #e74c3c !important;
}

.error-message {
  display: block;
  margin-top: 4px;
  color: #e74c3c;
  font-size: 0.875rem;
  font-weight: 500;
}

/**
 * High contrast mode
 */
@media (prefers-contrast: more) {
  :root {
    --text-color: #000000;
    --background-color: #ffffff;
    --link-color: #0000ee;
    --visited-color: #551a8b;
  }
  
  * {
    color: var(--text-color) !important;
    background-color: var(--background-color) !important;
    background-image: none !important;
  }
  
  a:link {
    color: var(--link-color) !important;
    text-decoration: underline !important;
  }
  
  a:visited {
    color: var(--visited-color) !important;
  }
  
  img {
    filter: grayscale(100%) contrast(120%) !important;
  }
}

/**
 * Reduced motion
 */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/**
 * Focus visible polyfill
 */
.js-focus-visible :focus:not(.focus-visible) {
  outline: none;
}

.js-focus-visible .focus-visible {
  outline: 3px solid #4a90e2;
  outline-offset: 2px;
}

/**
 * Print styles
 */
@media print {
  .skip-links,
  .sr-only,
  .visually-hidden,
  [role="button"] {
    display: none !important;
  }
  
  a[href^="http"]::after {
    content: " (" attr(href) ")";
    font-size: 0.875em;
    word-break: break-all;
  }
  
  a[href^="#"]::after,
  a[href^="/"]::after {
    content: "";
  }
  
  [aria-hidden="true"] {
    display: none !important;
  }
}

/**
 * Dark mode
 */
.dark-mode {
  --focus-outline: 3px solid #64b5f6;
  --focus-box-shadow: 0 0 0 2px #1e1e1e, 0 0 0 4px #64b5f6;
}

.dark-mode :focus {
  outline-color: var(--focus-outline);
  box-shadow: var(--focus-box-shadow);
}

/**
 * Screen reader only
 * Hide content visually but keep it accessible to screen readers
 */
.sr-only,
.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/**
 * Focusable element that's visually hidden
 */
.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

/**
 * Invisible but focusable element
 * Useful for "skip to content" links
 */
.invisible {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.invisible:focus,
.invisible:active {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto;
}
